@model DemoApplication.Models.Sitemap.SitemapHelperModel

@{
    var topLevel = Model.Nodes;
    SiteMapNodeModel activeNode;

    Func<SiteMapNodeModel, bool> isActive = (node) =>
                                                {
                                                    var active = (node.IsCurrentNode
                                                        || node.IsInCurrentPath
                                                        || (ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString().Equals(node.Action, StringComparison.CurrentCultureIgnoreCase)
                                                            && ViewContext.Controller.ValueProvider.GetValue("controller").RawValue.ToString().Equals(node.Controller, StringComparison.InvariantCultureIgnoreCase)
                                                            && !node.IsRootNode));
                                                    return active;
                                                };

    activeNode = topLevel.Where(x => isActive(x)).FirstOrDefault();                                                
}
<!--  Need to create a sub menu view to generate menu  -->


@if (activeNode != null)
{
    <div id="sub-menu">

        <ul class="nav nav-pills">

            @foreach (var child in activeNode.Children)
            {
                if (child.IsCurrentNode || child.IsInCurrentPath)
                {
                    foreach (var secondchild in child.Children)
                    {
                        <li class="@((secondchild.IsCurrentNode || secondchild.IsInCurrentPath) ? "active" : "")">
                            <a href="@secondchild.Url">@secondchild.Title</a>
                        </li>
                    }
                }
            }

        </ul>
    </div>
}
